package apa;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Service <br>
 * @version generated on Wed Jan 20 15:20:39 CST 2016 by jovizhu
 */

public interface Service extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.semanticweb.org/james/ontologies/2015/0/untitled-ontology-15#hasMicroCFD
     */
     
    /**
     * Gets all property values for the hasMicroCFD property.<p>
     * 
     * @returns a collection of values for the hasMicroCFD property.
     */
    Collection<? extends MicroCFD> getHasMicroCFD();

    /**
     * Checks if the class has a hasMicroCFD property value.<p>
     * 
     * @return true if there is a hasMicroCFD property value.
     */
    boolean hasHasMicroCFD();

    /**
     * Adds a hasMicroCFD property value.<p>
     * 
     * @param newHasMicroCFD the hasMicroCFD property value to be added
     */
    void addHasMicroCFD(MicroCFD newHasMicroCFD);

    /**
     * Removes a hasMicroCFD property value.<p>
     * 
     * @param oldHasMicroCFD the hasMicroCFD property value to be removed.
     */
    void removeHasMicroCFD(MicroCFD oldHasMicroCFD);


    /* ***************************************************
     * Property http://www.semanticweb.org/james/ontologies/2015/0/untitled-ontology-15#hasMicroService
     */
     
    /**
     * Gets all property values for the hasMicroService property.<p>
     * 
     * @returns a collection of values for the hasMicroService property.
     */
    Collection<? extends MService> getHasMicroService();

    /**
     * Checks if the class has a hasMicroService property value.<p>
     * 
     * @return true if there is a hasMicroService property value.
     */
    boolean hasHasMicroService();

    /**
     * Adds a hasMicroService property value.<p>
     * 
     * @param newHasMicroService the hasMicroService property value to be added
     */
    void addHasMicroService(MService newHasMicroService);

    /**
     * Removes a hasMicroService property value.<p>
     * 
     * @param oldHasMicroService the hasMicroService property value to be removed.
     */
    void removeHasMicroService(MService oldHasMicroService);


    /* ***************************************************
     * Property http://www.semanticweb.org/james/ontologies/2015/0/untitled-ontology-15#hasSCF
     */
     
    /**
     * Gets all property values for the hasSCF property.<p>
     * 
     * @returns a collection of values for the hasSCF property.
     */
    Collection<? extends SCF> getHasSCF();

    /**
     * Checks if the class has a hasSCF property value.<p>
     * 
     * @return true if there is a hasSCF property value.
     */
    boolean hasHasSCF();

    /**
     * Adds a hasSCF property value.<p>
     * 
     * @param newHasSCF the hasSCF property value to be added
     */
    void addHasSCF(SCF newHasSCF);

    /**
     * Removes a hasSCF property value.<p>
     * 
     * @param oldHasSCF the hasSCF property value to be removed.
     */
    void removeHasSCF(SCF oldHasSCF);


    /* ***************************************************
     * Property http://www.semanticweb.org/james/ontologies/2015/0/untitled-ontology-15#performAt
     */
     
    /**
     * Gets all property values for the performAt property.<p>
     * 
     * @returns a collection of values for the performAt property.
     */
    Collection<? extends Facility> getPerformAt();

    /**
     * Checks if the class has a performAt property value.<p>
     * 
     * @return true if there is a performAt property value.
     */
    boolean hasPerformAt();

    /**
     * Adds a performAt property value.<p>
     * 
     * @param newPerformAt the performAt property value to be added
     */
    void addPerformAt(Facility newPerformAt);

    /**
     * Removes a performAt property value.<p>
     * 
     * @param oldPerformAt the performAt property value to be removed.
     */
    void removePerformAt(Facility oldPerformAt);


    /* ***************************************************
     * Property http://www.semanticweb.org/james/ontologies/2015/0/untitled-ontology-15#produces
     */
     
    /**
     * Gets all property values for the produces property.<p>
     * 
     * @returns a collection of values for the produces property.
     */
    Collection<? extends Product> getProduces();

    /**
     * Checks if the class has a produces property value.<p>
     * 
     * @return true if there is a produces property value.
     */
    boolean hasProduces();

    /**
     * Adds a produces property value.<p>
     * 
     * @param newProduces the produces property value to be added
     */
    void addProduces(Product newProduces);

    /**
     * Removes a produces property value.<p>
     * 
     * @param oldProduces the produces property value to be removed.
     */
    void removeProduces(Product oldProduces);


    /* ***************************************************
     * Property http://www.semanticweb.org/james/ontologies/2015/0/untitled-ontology-15#uses
     */
     
    /**
     * Gets all property values for the uses property.<p>
     * 
     * @returns a collection of values for the uses property.
     */
    Collection<? extends Equipment> getUses();

    /**
     * Checks if the class has a uses property value.<p>
     * 
     * @return true if there is a uses property value.
     */
    boolean hasUses();

    /**
     * Adds a uses property value.<p>
     * 
     * @param newUses the uses property value to be added
     */
    void addUses(Equipment newUses);

    /**
     * Removes a uses property value.<p>
     * 
     * @param oldUses the uses property value to be removed.
     */
    void removeUses(Equipment oldUses);


    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
